{"version":3,"file":"static/js/912.6ca51ee8.chunk.js","mappings":"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","sources":["components/job/JobListItemList.jsx","components/job/JobListItem.jsx","components/job/JobList.jsx","components/job/Job.jsx","components/messages/Error.jsx","components/pagesection/PageSection.jsx","components/pagewrapper/PageWrapper.jsx"],"sourcesContent":["import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst JobListItemList = ({ data, titleIcon, titleText }) => {\r\n  if (data.length !== 0) {\r\n    return (\r\n      <ul className=\"item-list\">\r\n        <li className=\"item-list-title\">\r\n          <FontAwesomeIcon icon={titleIcon} /> {titleText}\r\n        </li>\r\n        {data.map((item, index) => (\r\n          <li key={index} className=\"item-list-entry\">\r\n            <FontAwesomeIcon icon={faChevronRight} /> {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else return <></>;\r\n};\r\n\r\nexport default JobListItemList;\r\n","import {\r\n  faSackDollar,\r\n  faHandHolding,\r\n  faHammer,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport JobListItemList from \"./JobListItemList\";\r\nimport \"./joblistitem.sass\";\r\n\r\nconst JobListItem = ({ jobData }) => {\r\n  return (\r\n    <div className=\"job-list-item\">\r\n      <h3 className=\"item-name\">{jobData.name}</h3>\r\n      <div className=\"item-lists\">\r\n        <JobListItemList\r\n          data={jobData.salary}\r\n          titleIcon={faSackDollar}\r\n          titleText={\"Оплата:\"}\r\n        />\r\n        <JobListItemList\r\n          data={jobData.offers}\r\n          titleIcon={faHandHolding}\r\n          titleText={\"Ми пропонуємо:\"}\r\n        />\r\n        <JobListItemList\r\n          data={jobData.requirements}\r\n          titleIcon={faHammer}\r\n          titleText={\"Ми вимагаємо:\"}\r\n        />\r\n        <JobListItemList\r\n          data={jobData.additional}\r\n          titleIcon={faPlus}\r\n          titleText={\"Додатково:\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListItem;\r\n","import JobListItem from \"./JobListItem\";\r\nimport \"./joblist.sass\";\r\n\r\nconst JobList = ({ jobsData }) => {\r\n  return (\r\n    <div className=\"job-list-container\">\r\n      <div className=\"job-list-grid\">\r\n        {jobsData.map((item) => (\r\n          <JobListItem key={item._id} jobData={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import { useGetJobDataQuery } from \"../../store/apiSlice\";\r\nimport Loading from \"../messages/Loading\";\r\nimport Error from \"../messages/Error\";\r\nimport PageWrapper from \"../pagewrapper/PageWrapper\";\r\nimport PageSection from \"../pagesection/PageSection\";\r\nimport JobList from \"./JobList\";\r\nimport \"./job.sass\";\r\n\r\nconst Job = () => {\r\n  const {\r\n    data: jobData,\r\n    isLoading: jobLoading,\r\n    isError: jobError,\r\n    isSuccess: jobSuccess,\r\n    error: jobErrorCode,\r\n  } = useGetJobDataQuery();\r\n\r\n  if (jobLoading) return <Loading />;\r\n  if (jobError)\r\n    return <Error errorCode={jobErrorCode ? jobErrorCode.status : \"\"} />;\r\n  if (jobSuccess) {\r\n    const filteredJobData = jobData.filter((item) => item.completed === false);\r\n\r\n    return (\r\n      <PageWrapper pageWrapperClassName={\"job-wrapper\"}>\r\n        <PageSection\r\n          pageSectionClassName={\"job-section\"}\r\n          pageSectionWrapperClassName={\"job-section-wrapper\"}\r\n        >\r\n          <JobList jobsData={filteredJobData} />\r\n        </PageSection>\r\n      </PageWrapper>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Job;\r\n","import { useContext } from 'react';\r\nimport { LocaleContext } from '../localeprovider/LocaleProvider';\r\nimport { ua_messagesdata } from './ua_messagesdata';\r\nimport { ru_messagesdata } from './ru_messagesdata';\r\nimport './error.sass';\r\n\r\nconst Error = ({ errorCode }) => {\r\n    const { localeName, primaryLocale } = useContext(LocaleContext);\r\n\r\n    const localeData =\r\n        localeName === primaryLocale ? ua_messagesdata : ru_messagesdata;\r\n\r\n    return (\r\n        <div className=\"error-page\">\r\n            <div className=\"error-page-wrapper\">\r\n                <img\r\n                    src=\"../img/error.png\"\r\n                    alt=\"Sad face\"\r\n                    className=\"error-page-image\"\r\n                />\r\n                <div className=\"error-page-text\">\r\n                    <h1 className=\"error-page-title\">{localeData.error}</h1>\r\n                    {errorCode ? (\r\n                        <p className=\"error-page-code\">\r\n                            `Код: ( ${errorCode} )`\r\n                        </p>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport \"./pagesection.sass\";\r\n\r\nconst PageSection = ({\r\n  pageSectionClassName,\r\n  pageSectionWrapperClassName,\r\n  children,\r\n}) => {\r\n  return (\r\n    <section\r\n      className={`page-section${\r\n        pageSectionClassName ? \" \" + pageSectionClassName : \"\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`page-section-wrapper${\r\n          pageSectionWrapperClassName ? \" \" + pageSectionWrapperClassName : \"\"\r\n        }`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PageSection;\r\n","import React from \"react\";\r\nimport \"./pagewrapper.sass\";\r\n\r\nconst PageWrapper = ({ pageWrapperClassName, children }) => {\r\n  return (\r\n    <div\r\n      className={`page-wrapper${\r\n        pageWrapperClassName ? \" \" + pageWrapperClassName : \"\"\r\n      }`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageWrapper;\r\n"],"names":["data","titleIcon","titleText","length","className","icon","map","item","index","faChevronRight","jobData","name","salary","faSackDollar","offers","faHandHolding","requirements","faHammer","additional","faPlus","jobsData","_id","useGetJobDataQuery","jobLoading","isLoading","jobError","isError","jobSuccess","isSuccess","jobErrorCode","error","Loading","Error","errorCode","status","filteredJobData","filter","completed","PageWrapper","pageWrapperClassName","PageSection","pageSectionClassName","pageSectionWrapperClassName","useContext","LocaleContext","localeData","localeName","primaryLocale","ua_messagesdata","ru_messagesdata","src","alt","children"],"sourceRoot":""}